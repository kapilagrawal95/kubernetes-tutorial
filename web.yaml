apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    # kompose.cmd: kompose convert
    # kompose.version: 1.26.1 (HEAD)
    # traefik.enable: "true"
    # traefik.http.routers.rcweb.entrypoints: web
    # traefik.http.routers.rcweb.rule: PathPrefix(`/`)
    # traefik.http.routers.rcweb.service: rcweb
    # traefik.http.services.rcweb.loadbalancer.server.port: "80"
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        # kompose.cmd: kompose convert
        # kompose.version: 1.26.1 (HEAD)
        # traefik.enable: "true"
        # traefik.http.routers.rcweb.entrypoints: web
        # traefik.http.routers.rcweb.rule: PathPrefix(`/`)
        # traefik.http.routers.rcweb.service: rcweb
        # traefik.http.services.rcweb.loadbalancer.server.port: "80"
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
        - env:
            - name: OBSERVABILITY_PROMETHEUS_PORT
              value: "8080"
            - name: OBSERVABILITY_TRACING_JAEGERURL
              value: http://jaeger:14268/api/traces
            - name: WEB_HTTP_SERVER_PORT
              value: "80"
            - name: USER_GRPC_SERVER_PORT
              value: "4000"
            - name: REDIS_ADDRS
              value: rc-redis-cluster-0.rc-redis-cluster-headless.default:6379,rc-redis-cluster-1.rc-redis-cluster-headless.default:6379,rc-redis-cluster-2.rc-redis-cluster-headless.default:6379,rc-redis-cluster-3.rc-redis-cluster-headless.default:6379,rc-redis-cluster-4.rc-redis-cluster-headless.default:6379,rc-redis-cluster-5.rc-redis-cluster-headless.default:6379
            - name: REDIS_PASSWORD
              value: "$REDIS_PASSWORD"
            - name: REDIS_EXPIRATIONHOUR
              value: "24"
          name: web
          image: minghsu0107/random-chat-web:main
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "$MEMORY"
              cpu: "$CPU"
            limits:
              memory: "$MEMORY"
              cpu: "$CPU"
      restartPolicy: Always
status: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     kompose.cmd: kompose convert
#     kompose.version: 1.26.1 (HEAD)
#     traefik.enable: "true"
#     traefik.http.routers.rcweb.entrypoints: web
#     traefik.http.routers.rcweb.rule: PathPrefix(`/`)
#     traefik.http.routers.rcweb.service: rcweb
#     traefik.http.services.rcweb.loadbalancer.server.port: "80"
#   creationTimestamp: null
#   labels:
#     io.kompose.service: web
#   name: web
# spec:
#   type: NodePort
#   ports:
#       name: "80"
#       port: 80
#       targetPort: 80
#       nodePort: 3000
#   selector:
#     io.kompose.service: web
# status:
#   loadBalancer: {}
